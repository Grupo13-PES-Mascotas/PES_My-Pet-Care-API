name: Create release

on:
  pull_request:
    types: closed
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Decrypt configuration files
      run: |
        chmod +x ./.github/scripts/decrypt_key.sh
        ./.github/scripts/decrypt_key.sh
      env:
        FIREBASE_PASSPHRASE: ${{ secrets.FIREBASE_PASSPHRASE }}
        PROPERTIES_PASSPHRASE: ${{ secrets.PROPERTIES_PASSPHRASE }}

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Extract branch name
      shell: bash
      run: echo "::set-env name=BRANCH_NAME::$(echo ${{ github.head_ref }} | cut -d'/' -f 2)"
    
    - name: Run Httptools tests
      run: ./gradlew :httptools:test

    - name: Build Httptools
      run: ./gradlew :httptools:assembleRelease
    
    - name: Run Community Manager tests
      run: ./gradlew :communitymanager:test

    - name: Build Community Manager
      run: ./gradlew :communitymanager:assembleRelease
    
    - name: Run usermanager tests
      run: ./gradlew :usermanager:test
    
    - name: Build usermanager
      run: ./gradlew :usermanager:assembleRelease
    
    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.BRANCH_NAME }}
        release_name: My Pet Care Libraries ${{ env.BRANCH_NAME }}
        draft: false
        prerelease: false
    
    - name: Upload Httptools library
      id: upload-httptools-release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./httptools/build/outputs/aar/httptools-release.aar
        asset_name: httptools.aar
        asset_content_type: application/zip
    
    - name: Upload Community Manager library
      id: upload-community-release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./communitymanager/build/outputs/aar/communitymanager-production-release.aar
        asset_name: communitymanager.aar
        asset_content_type: application/zip
    
    - name: Upload User Manager library
      id: upload-usermanager-release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./usermanager/build/outputs/aar/usermanager-production-release.aar
        asset_name: usermanager.aar
        asset_content_type: application/zip
